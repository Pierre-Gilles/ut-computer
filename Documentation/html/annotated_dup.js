var annotated_dup =
[
    [ "AtomLiteral", "class_atom_literal.html", "class_atom_literal" ],
    [ "CalculationOperator", "class_calculation_operator.html", "class_calculation_operator" ],
    [ "Calculator", "class_calculator.html", "class_calculator" ],
    [ "ComplexLiteral", "class_complex_literal.html", "class_complex_literal" ],
    [ "Database", "class_database.html", "class_database" ],
    [ "ExpressionLiteral", "class_expression_literal.html", "class_expression_literal" ],
    [ "LexerUTComputer", "class_lexer_u_t_computer.html", "class_lexer_u_t_computer" ],
    [ "Literal", "class_literal.html", "class_literal" ],
    [ "LiteralFactory", "class_literal_factory.html", "class_literal_factory" ],
    [ "MainWindow", "class_main_window.html", "class_main_window" ],
    [ "NumericLiteral", "class_numeric_literal.html", "class_numeric_literal" ],
    [ "Operator", "class_operator.html", "class_operator" ],
    [ "OperatorAnd", "class_operator_and.html", "class_operator_and" ],
    [ "OperatorCLEAR", "class_operator_c_l_e_a_r.html", "class_operator_c_l_e_a_r" ],
    [ "OperatorDenominator", "class_operator_denominator.html", "class_operator_denominator" ],
    [ "OperatorDifferent", "class_operator_different.html", "class_operator_different" ],
    [ "OperatorDivision", "class_operator_division.html", "class_operator_division" ],
    [ "OperatorDollar", "class_operator_dollar.html", "class_operator_dollar" ],
    [ "OperatorDROP", "class_operator_d_r_o_p.html", "class_operator_d_r_o_p" ],
    [ "OperatorDUP", "class_operator_d_u_p.html", "class_operator_d_u_p" ],
    [ "OperatorEqual", "class_operator_equal.html", "class_operator_equal" ],
    [ "OperatorIM", "class_operator_i_m.html", "class_operator_i_m" ],
    [ "OperatorInferior", "class_operator_inferior.html", "class_operator_inferior" ],
    [ "OperatorInferiorEqual", "class_operator_inferior_equal.html", "class_operator_inferior_equal" ],
    [ "OperatorIntegerDivision", "class_operator_integer_division.html", "class_operator_integer_division" ],
    [ "OperatorLASTARGS", "class_operator_l_a_s_t_a_r_g_s.html", "class_operator_l_a_s_t_a_r_g_s" ],
    [ "OperatorLASTOP", "class_operator_l_a_s_t_o_p.html", "class_operator_l_a_s_t_o_p" ],
    [ "OperatorManager", "class_operator_manager.html", "class_operator_manager" ],
    [ "OperatorMinus", "class_operator_minus.html", "class_operator_minus" ],
    [ "OperatorModulo", "class_operator_modulo.html", "class_operator_modulo" ],
    [ "OperatorMultiplication", "class_operator_multiplication.html", "class_operator_multiplication" ],
    [ "OperatorNeg", "class_operator_neg.html", "class_operator_neg" ],
    [ "OperatorNot", "class_operator_not.html", "class_operator_not" ],
    [ "OperatorNumerator", "class_operator_numerator.html", "class_operator_numerator" ],
    [ "OperatorOr", "class_operator_or.html", "class_operator_or" ],
    [ "OperatorPlus", "class_operator_plus.html", "class_operator_plus" ],
    [ "OperatorRE", "class_operator_r_e.html", "class_operator_r_e" ],
    [ "OperatorREDO", "class_operator_r_e_d_o.html", "class_operator_r_e_d_o" ],
    [ "OperatorSuperior", "class_operator_superior.html", "class_operator_superior" ],
    [ "OperatorSuperiorEqual", "class_operator_superior_equal.html", "class_operator_superior_equal" ],
    [ "OperatorSWAP", "class_operator_s_w_a_p.html", "class_operator_s_w_a_p" ],
    [ "OperatorUNDO", "class_operator_u_n_d_o.html", "class_operator_u_n_d_o" ],
    [ "ProgramLiteral", "class_program_literal.html", "class_program_literal" ],
    [ "StackOperator", "class_stack_operator.html", "class_stack_operator" ],
    [ "StackUTComputer", "class_stack_u_t_computer.html", "class_stack_u_t_computer" ],
    [ "StackUTComputerMemento", "class_stack_u_t_computer_memento.html", "class_stack_u_t_computer_memento" ],
    [ "StringLiteral", "class_string_literal.html", "class_string_literal" ],
    [ "Test_Atom_Literal", "class_test___atom___literal.html", "class_test___atom___literal" ],
    [ "Test_Calculator", "class_test___calculator.html", "class_test___calculator" ],
    [ "Test_Complex_Literal", "class_test___complex___literal.html", "class_test___complex___literal" ],
    [ "Test_Expression_Literal", "class_test___expression___literal.html", "class_test___expression___literal" ],
    [ "Test_Lexer_Class", "class_test___lexer___class.html", "class_test___lexer___class" ],
    [ "Test_Literal_Factory", "class_test___literal___factory.html", "class_test___literal___factory" ],
    [ "Test_Numeric_Literal", "class_test___numeric___literal.html", "class_test___numeric___literal" ],
    [ "Test_Operator_And", "class_test___operator___and.html", "class_test___operator___and" ],
    [ "Test_Operator_Class", "class_test___operator___class.html", "class_test___operator___class" ],
    [ "Test_Operator_CLEAR", "class_test___operator___c_l_e_a_r.html", "class_test___operator___c_l_e_a_r" ],
    [ "Test_Operator_Denominator", "class_test___operator___denominator.html", "class_test___operator___denominator" ],
    [ "Test_Operator_Different", "class_test___operator___different.html", "class_test___operator___different" ],
    [ "Test_Operator_Division", "class_test___operator___division.html", "class_test___operator___division" ],
    [ "Test_Operator_Dollar", "class_test___operator___dollar.html", "class_test___operator___dollar" ],
    [ "Test_Operator_DROP", "class_test___operator___d_r_o_p.html", "class_test___operator___d_r_o_p" ],
    [ "Test_Operator_DUP", "class_test___operator___d_u_p.html", "class_test___operator___d_u_p" ],
    [ "Test_Operator_Equal", "class_test___operator___equal.html", "class_test___operator___equal" ],
    [ "Test_Operator_IM", "class_test___operator___i_m.html", "class_test___operator___i_m" ],
    [ "Test_Operator_Inferior", "class_test___operator___inferior.html", "class_test___operator___inferior" ],
    [ "Test_Operator_InferiorEqual", "class_test___operator___inferior_equal.html", "class_test___operator___inferior_equal" ],
    [ "Test_Operator_Int_Div", "class_test___operator___int___div.html", "class_test___operator___int___div" ],
    [ "Test_Operator_LASTARGS", "class_test___operator___l_a_s_t_a_r_g_s.html", "class_test___operator___l_a_s_t_a_r_g_s" ],
    [ "Test_Operator_LASTOP", "class_test___operator___l_a_s_t_o_p.html", "class_test___operator___l_a_s_t_o_p" ],
    [ "Test_Operator_Manager", "class_test___operator___manager.html", "class_test___operator___manager" ],
    [ "Test_Operator_Minus", "class_test___operator___minus.html", "class_test___operator___minus" ],
    [ "Test_Operator_Mod", "class_test___operator___mod.html", "class_test___operator___mod" ],
    [ "Test_Operator_Multiplication", "class_test___operator___multiplication.html", "class_test___operator___multiplication" ],
    [ "Test_Operator_Neg", "class_test___operator___neg.html", "class_test___operator___neg" ],
    [ "Test_Operator_Not", "class_test___operator___not.html", "class_test___operator___not" ],
    [ "Test_Operator_Numerator", "class_test___operator___numerator.html", "class_test___operator___numerator" ],
    [ "Test_Operator_Or", "class_test___operator___or.html", "class_test___operator___or" ],
    [ "Test_Operator_Plus", "class_test___operator___plus.html", "class_test___operator___plus" ],
    [ "Test_Operator_RE", "class_test___operator___r_e.html", "class_test___operator___r_e" ],
    [ "Test_Operator_Superior", "class_test___operator___superior.html", "class_test___operator___superior" ],
    [ "Test_Operator_SuperiorEqual", "class_test___operator___superior_equal.html", "class_test___operator___superior_equal" ],
    [ "Test_Operator_SWAP", "class_test___operator___s_w_a_p.html", "class_test___operator___s_w_a_p" ],
    [ "Test_Operator_UNDO_REDO", "class_test___operator___u_n_d_o___r_e_d_o.html", "class_test___operator___u_n_d_o___r_e_d_o" ],
    [ "Test_Program_Literal", "class_test___program___literal.html", "class_test___program___literal" ],
    [ "Test_StackUTComputer_Class", "class_test___stack_u_t_computer___class.html", "class_test___stack_u_t_computer___class" ],
    [ "UTComputerException", "class_u_t_computer_exception.html", "class_u_t_computer_exception" ]
];